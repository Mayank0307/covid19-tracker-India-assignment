{"version":3,"sources":["store/reducers/states.js","store/actions/actionTypes.js","store/reducers/districts.js","store/reducers/stateTimeline.js","components/layout/Navigation/NavigationItem/NavigationItem.js","components/layout/Navigation/NavigationItems.js","components/home/State/State.js","components/home/DisplayChart.js","components/home/Home.js","store/actions/states.js","components/districtwise/StateTimelineChart.js","store/actions/districts.js","components/districtwise/Districts.js","App.js","index.js","components/layout/Navigation/NavigationItem/NavigationItem.module.css","components/layout/Navigation/NavigationItems.module.css"],"names":["initialState","stateData","countryTimeline","loaded","error","reducer","state","action","type","districtData","distictZones","districtDataLoaded","districtDataError","districtZonesLoaded","districtZonesError","districtZones","stateTimelineData","stateTimelineLoaded","stateTimelineError","stateTimeline","navigationItem","props","className","classes","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","State","map","key","onClick","clicked","data-id","confirmed","recovered","deaths","class","scope","DisplayChart","lineChart","labels","nationalTimeline","day","date","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","pointRadius","data","totalconfirmed","totalrecovered","totaldeceased","options","title","display","text","fontSize","legend","position","connect","states","dispatch","getStateData","a","axios","get","res","statewise","filter","cases_time_series","useEffect","sort","b","slice","StateTimelineChart","totalConfirmed","discharged","loc","getDistrictZones","stateName","zones","city","forEach","element","district","zone","districts","getDistricts","getStateTimeline","temp","regional","find","region","match","params","id","Object","entries","style","width","deceased","App","path","component","Home","Districts","composeEnhancers","compose","rootReducer","combineReducers","statesReducer","districtReducer","stateTimelineReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1431d501.chunk.js","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  stateData: [],\r\n  countryTimeline: [],\r\n  loaded: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_STATES_START:\r\n      return {\r\n        ...state,\r\n        loaded: false,\r\n      };\r\n    case actionTypes.FETCH_STATES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        stateData: action.stateData,\r\n        countryTimeline: action.countryTimeline,\r\n        loaded: true,\r\n      };\r\n    case actionTypes.FETCH_CONTACTS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loaded: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const FETCH_CONTACTS_START = \"FETCH_CONTACTS_START\";\r\nexport const FETCH_CONTACTS_SUCCESS = \"FETCH_CONTACTS_SUCCESS\";\r\nexport const FETCH_CONTACTS_FAIL = \"FETCH_CONTACTS_FAIL\";\r\n\r\nexport const FETCH_STATES_START = \"FETCH_STATES_START\";\r\nexport const FETCH_STATES_SUCCESS = \"FETCH_STATES_SUCCESS\";\r\nexport const FETCH_STATES_FAIL = \"FETCH_STATES_FAIL\";\r\n\r\nexport const FETCH_DISTRICTS_START = \"FETCH_DISTRICTS_START\";\r\nexport const FETCH_DISTRICTS_SUCCESS = \"FETCH_DISTRICTS_SUCCESS\";\r\nexport const FETCH_DISTRICTS_FAIL = \"FETCH_DISTRICTS_FAIL\";\r\n\r\nexport const FETCH_STATE_TIMELINE_START = \"FETCH_STATE_TIMELINE_START\";\r\nexport const FETCH_STATE_TIMELINE_SUCCESS = \"FETCH_STATE_TIMELINE_SUCCESS\";\r\nexport const FETCH_STATE_TIMELINE_FAIL = \"FETCH_STATE_TIMELINE_FAIL\";\r\n\r\nexport const FETCH_DISTRICT_ZONES_START = \"FETCH_DISTRICT_ZONES_START\";\r\nexport const FETCH_DISTRICT_ZONES_SUCCESS = \"FETCH_DISTRICT_ZONES_SUCCESS\";\r\nexport const FETCH_DISTRICT_ZONES_FAIL = \"FETCH_DISTRICT_ZONES_FAIL\";\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  districtData: null,\r\n  distictZones: null,\r\n  districtDataLoaded: false,\r\n  districtDataError: null,\r\n  districtZonesLoaded: false,\r\n  districtZonesError: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_DISTRICTS_START:\r\n      return {\r\n        ...state,\r\n        districtDataLoaded: false,\r\n      };\r\n    case actionTypes.FETCH_DISTRICTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        districtDataLoaded: true,\r\n        districtData: action.districtData,\r\n        districtDataError: null,\r\n      };\r\n    case actionTypes.FETCH_DISTRICTS_FAIL:\r\n      return {\r\n        ...state,\r\n        districtDataLoaded: true,\r\n        districtDataError: action.error,\r\n      };\r\n    case actionTypes.FETCH_DISTRICT_ZONES_START:\r\n      return {\r\n        ...state,\r\n        districtZonesLoaded: false,\r\n      };\r\n    case actionTypes.FETCH_DISTRICT_ZONES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        districtZones: action.districtZones,\r\n        districtZonesLoaded: true,\r\n        districtZonesError: null,\r\n      };\r\n    case actionTypes.FETCH_DISTRICT_ZONES_FAIL:\r\n      return {\r\n        ...state,\r\n        districtZonesLoaded: true,\r\n        districtZonesError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  stateTimelineData: null,\r\n  stateTimelineLoaded: false,\r\n  stateTimelineError: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_STATE_TIMELINE_START:\r\n      return {\r\n        ...state,\r\n        stateTimelineLoaded: false,\r\n      };\r\n    case actionTypes.FETCH_STATE_TIMELINE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        stateTimelineData: action.stateTimeline,\r\n        stateTimelineLoaded: true,\r\n        stateTimelineError: null,\r\n      };\r\n    case actionTypes.FETCH_STATE_TIMELINE_FAIL:\r\n      return {\r\n        ...state,\r\n        stateTimelineLoaded: false,\r\n        stateTimelineError: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink\r\n      to={props.link}\r\n      exact={props.exact}\r\n      activeClassName={classes.active}\r\n    >\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>\r\n      Home\r\n    </NavigationItem>\r\n  </ul>\r\n  \r\n);\r\n\r\nexport default navigationItems;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst State = (props) => {\r\n  const stateData = props.stateData.map((state) => (\r\n    <tr key={state.state} onClick={props.clicked} data-id={state.state}>\r\n      <td>{state.state}</td>\r\n      <td>{state.confirmed}</td>\r\n      <td>{state.active}</td>\r\n      <td>{state.recovered}</td>\r\n      <td>{state.deaths}</td>\r\n      <td>\r\n        <Link to={`/states/${state.state}`} className=\"btn btn-primary btn-sm\">\r\n          Click here\r\n        </Link>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4 class=\"text-info text-center\">State Wise COVID-19 Cases</h4>\r\n      <div className=\"table-responsive-md align-items-centre\">\r\n        <table className=\"table table-striped table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">State</th>\r\n              <th scope=\"col\">Confirmed Cases</th>\r\n              <th scope=\"col\">Active Cases</th>\r\n              <th scope=\"col\">Recovered</th>\r\n              <th scope=\"col\">Deaths</th>\r\n              <th scope=\"col\">Detailed Stats</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{stateData}</tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default State;\r\n","import React from \"react\";\r\nimport { Bar, Pie, Line } from \"react-chartjs-2\";\r\n\r\nconst DisplayChart = (props) => {\r\n  // backgroundColor: props.stateData.map(state => {\r\n  //     var rgb = [];\r\n  //     for(var i = 0; i < 3; i++)\r\n  //         rgb.push(Math.floor(Math.random() * 255));\r\n  //     return 'rgb('+ rgb.join(',') +')';\r\n  // }),\r\n\r\n  const lineChart = {\r\n    labels: props.nationalTimeline.map((day) => day.date),\r\n    datasets: [\r\n      {\r\n        label: \"Confirmed Cases\",\r\n        fill: false,\r\n        lineTension: 0,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(0,0,255,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1,\r\n        data: props.nationalTimeline.map((day) => day.totalconfirmed),\r\n      },\r\n      {\r\n        label: \"Active cases\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(255,0,0,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1,\r\n        data: props.nationalTimeline.map(\r\n          (day) => day.totalconfirmed - day.totalrecovered - day.totaldeceased\r\n        ),\r\n      },\r\n      {\r\n        label: \"Recovered\",\r\n        fill: false,\r\n        lineTension: 0,\r\n        backgroundColor: \"rgba(75,192,192,1)\",\r\n        borderColor: \"rgba(0,255,0,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1,\r\n        data: props.nationalTimeline.map((day) => day.totalrecovered),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"jumbotron mt-2\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <Line\r\n            data={lineChart}\r\n            options={{\r\n              title: {\r\n                display: true,\r\n                text: \"National Timeline\",\r\n                fontSize: 20,\r\n              },\r\n              legend: {\r\n                display: true,\r\n                position: \"right\",\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayChart;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getStateData } from \"../../store/actions/states\";\r\nimport State from \"./State/State\";\r\nimport DisplayChart from \"./DisplayChart\";\r\n\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.getStateData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <DisplayChart\r\n        stateData={props.stateData\r\n          .sort(function (a, b) {\r\n            return b.confirmed - a.confirmed;\r\n          })\r\n          .slice(1, 11)}\r\n        nationalTimeline={props.nationalTimeline}\r\n      />\r\n      <State stateData={props.stateData.slice(1)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stateData: state.states.stateData,\r\n  nationalTimeline: state.states.countryTimeline,\r\n  loaded: state.states.loaded,\r\n  error: state.states.error,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getStateData: () => dispatch(getStateData()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getStateData = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATES_START,\r\n    });\r\n    // const res = await axios.get('https://cors-anywhere.herokuapp.com/https://covid-19india-api.herokuapp.com/v2.0/state_data');\r\n    // console.log(res.data[1].state_data);\r\n    // dispatch({\r\n    //     type: actionTypes.FETCH_STATES_SUCCESS,\r\n    //     stateData: res.data[1].state_data\r\n    // })\r\n\r\n    const res = await axios.get(\"https://api.covid19india.org/data.json\");\r\n    // console.log(res.data.cases_time_series);\r\n    // console.log(res.data.statewise);\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATES_SUCCESS,\r\n      stateData: res.data.statewise.filter(\r\n        (state) => state.state !== \"State Unassigned\"\r\n      ),\r\n      countryTimeline: res.data.cases_time_series,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATES_FAIL,\r\n      error: err,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Bar, Pie, Line } from \"react-chartjs-2\";\r\n\r\nconst StateTimelineChart = (props) => {\r\n  const lineChart = {\r\n    labels: props.stateTimelineData.map((state) => state.day),\r\n    datasets: [\r\n      {\r\n        label: \"Active Cases\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,80,85,1)\",\r\n        borderColor: \"rgba(255,0,0,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1.5,\r\n        data: props.stateTimelineData.map(\r\n          (state) => state.totalConfirmed - state.discharged - state.deaths\r\n        ),\r\n      },\r\n      {\r\n        label: \"Discharged\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,80,85,1)\",\r\n        borderColor: \"rgba(0,255,0,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1.5,\r\n        data: props.stateTimelineData.map((state) => state.discharged),\r\n      },\r\n      {\r\n        label: \"Confirmed\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,80,85,1)\",\r\n        borderColor: \"rgba(255,255,0,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1.5,\r\n        data: props.stateTimelineData.map((state) => state.totalConfirmed),\r\n      },\r\n      {\r\n        label: \"Deaths\",\r\n        fill: false,\r\n        lineTension: 0.5,\r\n        backgroundColor: \"rgba(75,80,85,1)\",\r\n        borderColor: \"rgba(0,0,255,1)\",\r\n        borderWidth: 1,\r\n        pointRadius: 1.5,\r\n        data: props.stateTimelineData.map((state) => state.deaths),\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"jumbotron mt-2\">\r\n      <Line\r\n        data={lineChart}\r\n        options={{\r\n          title: {\r\n            display: true,\r\n            text: `Case Timeline for ${props.stateTimelineData[0].loc}`,\r\n            fontSize: 20,\r\n          },\r\n          legend: {\r\n            display: true,\r\n            position: \"right\",\r\n          },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateTimelineChart;\r\n","import axios from \"axios\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const getDistricts = (stateName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICTS_START,\r\n    });\r\n    // console.log(stateName);\r\n    const res = await axios.get(\r\n      \"https://api.covid19india.org/state_district_wise.json\"\r\n    );\r\n    // console.log(Object.entries(res.data[stateName].districtData).map(district => (\r\n    //     district[1].confirmed\r\n    // )));\r\n    // console.log(res.data[stateName].districtData);\r\n    dispatch(getDistrictZones(stateName));\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICTS_SUCCESS,\r\n      districtData: res.data[stateName].districtData,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICTS_FAIL,\r\n      error: err,\r\n    });\r\n  }\r\n};\r\n\r\nconst getDistrictZones = (stateName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICT_ZONES_START,\r\n    });\r\n    const res = await axios.get(\"https://api.covid19india.org/zones.json\");\r\n    const stateData = res.data.zones.filter((city) => city.state === stateName);\r\n    // console.log(stateData);\r\n    let districtZones = {};\r\n    stateData.forEach((element) => {\r\n      districtZones[element.district] = element.zone;\r\n    });\r\n    // console.log(districtZones);\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICT_ZONES_SUCCESS,\r\n      districtZones: districtZones,\r\n    });\r\n  } catch (err) {\r\n    // console.log(err);\r\n    dispatch({\r\n      type: actionTypes.FETCH_DISTRICT_ZONES_FAIL,\r\n      error: err,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getStateTimeline = (stateName) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATE_TIMELINE_START,\r\n    });\r\n    const res = await axios.get(\r\n      \"https://api.rootnet.in/covid19-in/stats/history\"\r\n    );\r\n    // console.log(res.data.data);\r\n    let stateTimeline = [];\r\n    const stateData = res.data.data.filter((temp) =>\r\n      temp.regional.find((region) => region.loc === stateName)\r\n    );\r\n    // console.log(\"stateData: \", stateData);\r\n    stateTimeline = stateData.map((temp) => {\r\n      let stateData = temp.regional.find((region) => region.loc === stateName);\r\n      stateData.day = temp.day;\r\n      return stateData;\r\n    });\r\n    // console.log(stateTimeline);\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATE_TIMELINE_SUCCESS,\r\n      stateTimeline: stateTimeline,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_STATE_TIMELINE_FAIL,\r\n      error: err,\r\n    });\r\n    // console.log(err);\r\n  }\r\n};\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport StateTimelineChart from \"./StateTimelineChart\";\r\nimport { getDistricts, getStateTimeline } from \"../../store/actions/districts\";\r\n\r\nconst Districts = (props) => {\r\n  useEffect(() => {\r\n    props.getDistricts(props.match.params.id);\r\n    props.getStateTimeline(props.match.params.id);\r\n    // console.log(props.districtData);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {props.stateTimelineLoaded && (\r\n        <StateTimelineChart stateTimelineData={props.stateTimelineData} />\r\n      )}\r\n      <div className=\"d-flex flex-wrap flex-row justify-content-between\">\r\n        {props.districtDataLoaded &&\r\n          props.districtZonesLoaded &&\r\n          Object.entries(props.districtData).map((district) => (\r\n            <div\r\n              key={district[0]}\r\n              className=\"card border-info mb-3\"\r\n              style={{ width: \"16rem\" }}\r\n            >\r\n              <h5 className=\"card-header\">{district[0]}</h5>\r\n              <div className=\"card-body text-info\">\r\n                {/* <div className=\"card-text\"> */}\r\n                <table className=\"table table-borderless table-sm\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Confirmed:</td> <td>{district[1].confirmed}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Active:</td> <td>{district[1].active}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Recovered:</td> <td>{district[1].recovered}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Deaths:</td> <td>{district[1].deceased}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <button\r\n                  className={\r\n                    props.districtZones[district[0]] === \"Red\"\r\n                      ? \"btn btn-danger\"\r\n                      : props.districtZones[district[0]] === \"Orange\"\r\n                      ? \"btn btn-warning\"\r\n                      : \"btn btn-success\"\r\n                  }\r\n                >\r\n                  {props.districtZones[district[0]]\r\n                    ? props.districtZones[district[0]] + \" Zone\"\r\n                    : \"Not Applicable\"}\r\n                </button>\r\n                {/* </div> */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  districtData: state.districts.districtData,\r\n  districtDataLoaded: state.districts.districtDataLoaded,\r\n  districtDataError: state.districts.districtDataError,\r\n  districtZones: state.districts.districtZones,\r\n  districtZonesLoaded: state.districts.districtZonesLoaded,\r\n  stateTimelineData: state.stateTimeline.stateTimelineData,\r\n  stateTimelineLoaded: state.stateTimeline.stateTimelineLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getDistricts: (stateName) => dispatch(getDistricts(stateName)),\r\n  getStateTimeline: (stateName) => dispatch(getStateTimeline(stateName)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Districts);\r\n","import React, { Fragment } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Navbar from './components/layout/Navigation/NavigationItems';\r\nimport Home from './components/home/Home';\r\nimport Districts from './components/districtwise/Districts';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Fragment>\r\n        <Navbar />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/states/:id\" component={Districts} />\r\n      </Fragment>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport statesReducer from './store/reducers/states';\r\nimport districtReducer from './store/reducers/districts';\r\nimport stateTimelineReducer from './store/reducers/stateTimeline';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\nconst rootReducer = combineReducers({\r\n  states: statesReducer,\r\n  districts: districtReducer,\r\n  stateTimeline: stateTimelineReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__20-A2\",\"active\":\"NavigationItem_active__3ZDnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1hvuL\"};"],"sourceRoot":""}